
==================== FINAL INTERFACE ====================
2017-03-23 21:13:30.54697 UTC

interface GoblinBurner-0.1.0.0-9BGpxHuB4WvZG8Ab7rdhV:Interface 8002
  interface hash: 468698b31fb19acee02106be30ca76fd
  ABI hash: 2cfcd2b716daaec8dd34e67baaab6caf
  export-list hash: a56d19b6ff439ec6deb3b7365e9701bb
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interface.action_list
  Interface.actionsFromSystem
  Interface.character_list
  Interface.cmdDelChar
  Interface.cmdExit
  Interface.cmdListAct
  Interface.cmdListChar
  Interface.cmdLoadChar
  Interface.cmdMakeAct
  Interface.cmdModChar
  Interface.cmdNewChar
  Interface.cmdRollAtr
  Interface.cmdSaveChar
  Interface.cmdShowChar
  Interface.create_char
  Interface.delete_character
  Interface.envFromCharacter
  Interface.fileStarter
  Interface.generalTrhowFromSystem
  Interface.get_attributes
  Interface.listCon
  Interface.listEnv
  Interface.loadCharaterInterface
  Interface.make_action
  Interface.menu
  Interface.menu_list
  Interface.menu_title
  Interface.modifyCharacter
  Interface.name_skill
  Interface.printRoll
  Interface.printSkillClass
  Interface.putAndWait
  Interface.roll_skilatr
  Interface.saveCharacther
  Interface.showAtributes
  Interface.showCharacter
  Interface.skilatr_list
  Interface.skillTitle
  Interface.skill_picker
  Interface.start
  Interface.welcome
module dependencies: AST Mannager Parser
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
import  -/  AST 9c55e0321b218d3946d7f66413c3601c
  exports: 790fa163781c6789615dccc145b86d73
  Action 5c484ea8d976c99055ab31eb15645f87
  Atr 8be751fc99052a89e9a9bd6b9163dc6f
  Character 577b7d529bf2b50c23293b69a67d8c2f
  Const 07ef0d6d599ba42ad7b15e8070a858fc
  DepSys 87413475971afbf7d8af6ad7ccd81c99
  Game 2c1f147569371d0ad5f1aa762d465f52
  Gm 62ffd867c97786469a9424b1be3c9ab5
  Name d833e2277e74c61d9822e98cc2f4a2a9
  PC 919c3b3bc72b363c6539fb82db45aebe
  Plus d3f77c477deafb93ac91c10caf6369a6
  Skill 29a0cd68995f28c0cf0a524fb930feb4
  Skills 720f0cae70fc84fbe12d3ad9dd9a3c07
  System ed8187dd3058901d19e252d8b4f3681d
  ThrowsGen d59d5e638a2bfb45a11e5394743c01d0
  UAct 75461efabe39211a11043e4d95fea0b1
import  -/  Mannager fa3861e902e7839af18bc9082cb5a2bc
  exports: 8d5f8926a939a7462beb30aeef1bcbb3
  Env 586b991ca61735c8c4f09b0d9994db78
  characterListModify dc5d6444594b0bb963ca47166c0a1637
  character_creation 3c386baf2f128150d155b53886c7f043
  dices_thrower 0e7f71fa8ae7e038655faa5ec851a803
  nth 9ee0006dacd36b067c6413a3ffdea4a2
  skilatr_thrower 8886ed87d81101c5b0ceed8a1da0385a
  system_depurator 20244db579ce4d49232c5d1b708a487b
  takeOut 1c75a3b11e4f747be6373e1ec8d07848
import  -/  Parser 7cb7fef757f4c5e09f18347e7b48aa02
  exports: 0fdd2aef74e118e1a69e0cbcff0e5c0c
  loadCharacter 910df099992be458463722ba862b4051
  num_parse 2a9ba199ce76b967718f778c6e0130b0
  parseSystem 4324163ea8da0f67a78777cf44119855
  totParser 4b5ff01700d73efe6284edf71bce3f29
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.String 82047932fe8b05f9590326d15e87580c
import  -/  process-1.4.3.0@process-1.4.3.0:System.Process 1ee59b956b7cad68338d3f6ab3e772ed
251a3da097ba7e4733caccf08eecfdfe
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interface.$trModule2
                   Interface.$trModule1) -}
fa135b6f96ad40b3e2c3ad72e7c4f433
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Interface"#) -}
6d759f7e1fa02976eb25dd998fa6dd08
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "GoblinBurner-0.1.0.0-9BGpxHuB4WvZG8Ab7rdhV"#) -}
dd1b708e532bb8d033b6f2fb76676722
  $wcmdListAct ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        w of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case ww of wild {
                           AST.Sys ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8
                           -> case Interface.actionsFromSystem1 ret_ty GHC.Base.String of {}
                           AST.DepSys act ds ds2 ds3 ds4 ds5
                           -> GHC.Base.++
                                @ GHC.Types.Char
                                (Interface.action_list act Interface.cmdDelChar3)
                                Interface.cmdListAct2 })
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) } } }) -}
1ff55e8697213b07befe657abe36b997
  $wcmdListChar ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        w of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Interface.character_list ww1 Interface.cmdDelChar3)
                           Interface.cmdListAct2)
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) } } }) -}
9b72fd62ef5a8a04fae95ad36e2bdbb5
  $wcmdLoadChar ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdLoadChar3 w of ds1 { (#,#) ipv ipv1 ->
                 let {
                   fname :: GHC.Base.String
                   = GHC.CString.unpackAppendCString# "files/"# ipv1
                 } in
                 case GHC.IO.Handle.FD.openFile1
                        fname
                        GHC.IO.IOMode.ReadMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ [AST.Character]
                         (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                         Interface.cmdLoadChar2
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[AST.Character]>_R))
                         GHC.Tuple.()
                         fname
                         ipv5)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError [AST.Character]>_R) of wild {
                   Data.Either.Left er
                   -> (# ipv4, (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #)
                   Data.Either.Right a
                   -> (# ipv4,
                         (AST.Gm ww (GHC.Base.++ @ AST.Character a ww1),
                          GHC.Types.[] @ GHC.Types.Char) #) } } } }) -}
61f69b5da9a556f44c3f192ed1386ff0
  $wprintRoll ::
    [GHC.Integer.Type.Integer]
    -> [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: [GHC.Integer.Type.Integer])
                   (ww1 :: [GHC.Integer.Type.Integer])
                   (ww2 :: GHC.Integer.Type.Integer) ->
                 GHC.CString.unpackAppendCString#
                   "The total of the roll is: "#
                   (case GHC.Show.$w$cshowsPrec1
                           0#
                           ww2
                           (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.: @ GHC.Types.Char ww4 ww5)
                      (GHC.CString.unpackAppendCString#
                         "\n\
                         \The dice roll where:\n"#
                         (GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Show.$fShowInteger_$cshowList
                               ww
                               (GHC.Types.[] @ GHC.Types.Char))
                            (GHC.CString.unpackAppendCString#
                               "\n\
                               \The dice plus de modifier:\n"#
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  (GHC.Show.$fShowInteger_$cshowList
                                     ww1
                                     (GHC.Types.[] @ GHC.Types.Char))
                                  Interface.printRoll1)))) })) -}
169573bd2cf42891184b7dfd4c269ca8
  $wshowAtributes ::
    AST.Name
    -> [(AST.Name, GHC.Integer.Type.Integer)]
    -> [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.Name)
                   (ww1 :: [(AST.Name, GHC.Integer.Type.Integer)])
                   (ww2 :: [GHC.Base.String])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        w of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Name: "#
                           (GHC.Base.++
                              @ GHC.Types.Char
                              ww
                              (GHC.CString.unpackAppendCString#
                                 "\n\
                                 \Attributes: \n"#
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    (Interface.listEnv ww1)
                                    (GHC.CString.unpackAppendCString#
                                       "\n\
                                       \Conditions: \n"#
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          (Interface.listCon ww2)
                                          Interface.cmdShowChar3))))))
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } }) -}
f04bbc6555ee3a00948aec3f0ec009f4
  action_list ::
    [AST.Action] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
77b88771324513340db811b426d7bbb3
  actionsFromSystem :: AST.System -> [AST.Action]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.System) ->
                 case ds of wild {
                   AST.Sys ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6
                   -> Interface.actionsFromSystem1
                   AST.DepSys act ds1 ds2 ds3 ds4 ds5 -> act }) -}
804b832c0c577075a38b902c68aebd08
  actionsFromSystem1 :: [AST.Action]
  {- Strictness: x -}
d7ddaf54a8a800040ea8973e834238b7
  character_list ::
    [AST.Character] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
186b86a37a7a5d6842b5f972cbdda53a
  cmdDelChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdDelChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
4b2f1ecaa2dcaf01762407e5bab23e6d
  cmdDelChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdDelChar2 char eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system ipv1, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
941cf08e2d4741159e4c2c3f0e2fde32
  cmdDelChar2 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (char :: [AST.Character])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Which character you want to delete?\n"#
                           (Interface.character_list char Interface.cmdDelChar3))
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Mannager.takeOut
                      @ AST.Character
                      (Parser.num_parse ipv5)
                      char #) } } }) -}
f0b49e226a5ad096bad74d3cd26b58af
  cmdDelChar3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
4fc20873bf0ce5dd80c7a2aad56a209b
  cmdDelChar4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "clear"#) -}
0921cd5ec2b41382180041e423864646
  cmdExit :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdExit1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
a9d8b91df1e23a74b010a0da88f529a5
  cmdExit1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Interface.cmdExit3
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2, (g, Interface.cmdExit2) #) } }) -}
39f280134191eda8d82dc9437442b47c
  cmdExit2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Exit"#) -}
87e9ec450c84c1b4e70e89ad1398d591
  cmdExit3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Goodbye!...\n"#) -}
63c4236a39392c74438a71d075afcaff
  cmdListAct :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdListAct1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
c21e395417db290917c360937802443f
  cmdListAct1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdListAct ww1 ww2 w1 }) -}
7ce12fd496b233bce74adff02332667b
  cmdListAct2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Press any key to continue \n"#) -}
be5c1e84eb19bfb9eedec4b0d083d72f
  cmdListChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdListChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
acc7f4a94b1db8775372ab3610368193
  cmdListChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdListChar ww1 ww2 w1 }) -}
0f438b2999f522f1568274fb253cc857
  cmdLoadChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdLoadChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
42f714a52e20c3c1bd4fd6da9695648c
  cmdLoadChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdLoadChar ww1 ww2 w1 }) -}
6d4fec430d8d16e346897a31f307b54e
  cmdLoadChar2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([AST.Character]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([AST.Character]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Parser.num_parse4
                   @ [AST.Character]
                   Parser.loadCharacter1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[AST.Character]>_R))) -}
4b7d6aa9494ba3fc31ba67e19eaf39d2
  cmdLoadChar3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Interface.cmdLoadChar4
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 System.IO.getLine1 ipv2 } }) -}
43419eca4f73ad89e5ff2e8bdfd0753d
  cmdLoadChar4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Please enter your character file \n"#) -}
16d75357a293f28acb80085c4a3942d5
  cmdMakeAct :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdMakeAct1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
dd06fe18e739cb85053b237e819c8211
  cmdMakeAct1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdMakeAct2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
4f0d89a589d0b7d48023f33221a83f11
  cmdMakeAct2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
84b0160a0dfbcab59f7badec2a79a55e
  cmdModChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdModChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
2aa998fdfcb94edef2a2d3ed12866043
  cmdModChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdModChar2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system ipv1, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
8106502ed83d72fc2edfa33cb3b56b0d
  cmdModChar2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U> -}
6945711412b462cd4550554c305cecbb
  cmdNewChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
2439c81c5f0e36fffba100703cf74f6f
  cmdNewChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdNewChar2 system eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system (GHC.Types.: @ AST.Character ipv1 char),
                     GHC.Types.[] @ GHC.Types.Char) #) } }) -}
4afacf9d4283d269d5f821c6ae8c2968
  cmdNewChar2 ::
    AST.System
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, AST.Character #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: AST.System)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild {
                   AST.Sys ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6
                   -> case Interface.cmdNewChar6
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, AST.Character #)
                      of {}
                   AST.DepSys ds1 attr depAttr skl ds2 ds3
                   -> case System.Process.system1
                             Interface.cmdDelChar4
                             eta of ds4 { (#,#) ipv ipv1 ->
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Interface.cmdNewChar5
                             GHC.Types.False
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.IO.Handle.Internals.wantReadableHandle_1
                             @ GHC.Base.String
                             GHC.IO.Handle.Text.hGetLine4
                             GHC.IO.Handle.FD.stdin
                             GHC.IO.Handle.Text.hGetLine2
                               `cast`
                             (<GHC.IO.Handle.Types.Handle__>_R
                              ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      case attr of wild1 { AST.Atr ds7 list ->
                      case Interface.cmdNewChar4
                             list
                             (GHC.Types.[] @ (AST.Variable, GHC.Integer.Type.Integer))
                             ipv4 of ds8 { (#,#) ipv6 ipv7 ->
                      case Interface.cmdNewChar3
                             skl
                             (GHC.Types.[] @ AST.Skills)
                             ipv6 of ds9 { (#,#) ipv8 ipv9 ->
                      (# ipv8,
                         Mannager.character_creation
                           ipv5
                           ipv7
                           depAttr
                           ipv9 #) } } } } } } }) -}
45a002a3c74df52c32443a087ec6c030
  cmdNewChar3 ::
    [AST.Skills]
    -> [AST.Skills]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Skills] #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
74f602a4c12737207c2236d915d25f26
  cmdNewChar4 ::
    [AST.Name]
    -> Mannager.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Mannager.Env #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
8b4d2fd1f7f9a621965254244706a588
  cmdNewChar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Enter your character name!\n"#) -}
74bdd7693518b0e86d7f030460ff625c
  cmdNewChar6 :: GHC.Types.IO AST.Character
  {- Strictness: x -}
e7b89e70df10bfde1ee59d087a888fe6
  cmdRollAtr :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdRollAtr1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
e3c9d87fff8711ec45b84e49f7f23821
  cmdRollAtr1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdRollAtr2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
32a6f7fb698d40989c8afd68e69d9084
  cmdRollAtr2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U> -}
63d212536ab60deaae274448e634ca81
  cmdSaveChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdSaveChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
730767b1ec2fcffbea92e76cbe7c9bbe
  cmdSaveChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdSaveChar2 char eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
c530e9fc5a18859c890217be663b1302
  cmdSaveChar2 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
7f14fcc700dadb7110b887f9dc17790f
  cmdShowChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdShowChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
ef373db1dd33fae29020d64aaee3ff34
  cmdShowChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdShowChar2 char eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
a8ea4cb97356eabec9a85a09365aae42
  cmdShowChar2 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (chars :: [AST.Character])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Interface.character_list chars Interface.cmdDelChar3)
                           Interface.cmdShowChar5)
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Mannager.nth
                        @ AST.Character
                        (case (Text.Parsec.Prim.runPT
                                 @ GHC.Base.String
                                 @ Data.Functor.Identity.Identity
                                 @ GHC.Types.Char
                                 @ ()
                                 @ GHC.Integer.Type.Integer
                                 (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                                 Parser.num_parse2
                                   `cast`
                                 (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                           <[GHC.Types.Char]>_R
                                           <()>_R
                                           <Data.Functor.Identity.Identity>_R
                                           <GHC.Integer.Type.Integer>_R))
                                 GHC.Tuple.()
                                 (GHC.Types.[] @ GHC.Types.Char)
                                 ipv5)
                                `cast`
                              (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      Text.Parsec.Error.ParseError
                                      GHC.Integer.Type.Integer>_R) of wild {
                           Data.Either.Left err -> Interface.cmdShowChar4
                           Data.Either.Right a
                           -> GHC.Integer.Type.minusInteger a Interface.cmdDelChar3 })
                        chars of ww { AST.PC ww1 ww2 ww3 ->
                 Interface.$wshowAtributes ww1 ww2 ww3 ipv4 } } } }) -}
85ea6c47c29ea607a632b59504bcb8ae
  cmdShowChar3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Press any key to continue \n"#) -}
7dbcd846f892c0cbcc0d26382631686f
  cmdShowChar4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
050eefeab584f18baefabc10f445d6cb
  cmdShowChar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Which character you want to see?\n"#) -}
ce8c87c6385c66a5f139ee2931c30dd6
  create_char :: AST.System -> GHC.Types.IO AST.Character
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar2
                  `cast`
                (<AST.System>_R ->_R Sym (GHC.Types.N:IO[0] <AST.Character>_R)) -}
e5c893f61afa1117c9089b1767f727ef
  delete_character :: [AST.Character] -> GHC.Types.IO [AST.Character]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdDelChar2
                  `cast`
                (<[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
e8f8bbf359ad5279dc52a5ee18edd816
  envFromCharacter :: AST.Character -> Mannager.Env
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.Character) ->
                 case ds of wild { AST.PC ds1 env ds2 -> env }) -}
92f63777b171cf45230de90a2e44f108
  fileStarter :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.fileStarter1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cac91499831ae395fffe4a3226050d1e
  fileStarter1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U> -}
22c871142134c2eb4897649988d2fd4f
  generalTrhowFromSystem :: AST.System -> AST.ThrowsGen
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.System) ->
                 case ds of wild {
                   AST.Sys ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6
                   -> Interface.generalTrhowFromSystem1
                   AST.DepSys ds1 ds2 ds3 ds4 ds5 throwsGen -> throwsGen }) -}
196869d464b992330316dd8bec538909
  generalTrhowFromSystem1 :: AST.ThrowsGen
  {- Strictness: x -}
ba0591b54195db555a1058347957288e
  get_attributes ::
    [AST.Name] -> Mannager.Env -> GHC.Types.IO Mannager.Env
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar4
                  `cast`
                (<[AST.Name]>_R
                 ->_R <Mannager.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Mannager.Env>_R)) -}
cdb66b499082144af97a6d62492692e6
  listCon :: [GHC.Base.String] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
98275cce65bf9604e2180fe7b07290be
  listEnv :: Mannager.Env -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
fa6901a5e3b00233f81cf86b2c271ff9
  loadCharaterInterface :: GHC.Types.IO [AST.Character]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.loadCharaterInterface1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
c5a1f6bfa24a21d760d5aba8b779a874
  loadCharaterInterface1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdLoadChar3 s of ds1 { (#,#) ipv ipv1 ->
                 let {
                   fname :: GHC.Base.String
                   = GHC.CString.unpackAppendCString# "files/"# ipv1
                 } in
                 case GHC.IO.Handle.FD.openFile1
                        fname
                        GHC.IO.IOMode.ReadMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ [AST.Character]
                         (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                         Interface.cmdLoadChar2
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[AST.Character]>_R))
                         GHC.Tuple.()
                         fname
                         ipv5)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError [AST.Character]>_R) of wild {
                   Data.Either.Left er -> (# ipv4, GHC.Types.[] @ AST.Character #)
                   Data.Either.Right a -> (# ipv4, a #) } } } }) -}
6ae97935dcf99589b32a36d6fa7faa71
  make_action :: AST.System -> [AST.Character] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdMakeAct2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9a42b4bc31032ef73b4ed64e7521174c
  menu ::
    AST.Game
    -> [(GHC.Base.String,
         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
    -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.menu1
                  `cast`
                (<AST.Game>_R
                 ->_R <[(GHC.Base.String,
                         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6a6e9736f99222ca599153a08475b0d9
  menu1 ::
    AST.Game
    -> [(GHC.Base.String,
         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
e671c0c3498c5ce78f2dcf590195ba49
  menu_list ::
    [(GHC.Base.String, a)]
    -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
9b10ece44958d62902335010580ce247
  menu_title ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title30
                   Interface.menu_title1) -}
e845c59aa170a2dd4132a26abbd96122
  menu_title1 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title28
                   Interface.menu_title2) -}
ed86f692153d6da772a2e65ebac58491
  menu_title10 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title11
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)))) -}
42b19dbddfeb339d93b476a2b72cec96
  menu_title11 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.cmdExit2,
                  Interface.cmdExit1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
db2aaa57a9a66e2be988a7f0ef9f9bee
  menu_title12 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title13,
                  Interface.cmdShowChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
bf298bd2b29b469f6cefd1ca9facd8bf
  menu_title13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "View Character"#) -}
d36449f41185db9b9c3c9a376087d548
  menu_title14 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title15,
                  Interface.cmdLoadChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
68f644be0dc1a343219b3c4f349bb09d
  menu_title15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Load Character"#) -}
9d88649ba628c2b4ac6989e95e36bf5f
  menu_title16 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title17,
                  Interface.cmdDelChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
6b21c7839939f76c62d8908b7630e248
  menu_title17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Delete Character"#) -}
69ec9d9e64da8e1ea510c6d1f3b99682
  menu_title18 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title19,
                  Interface.cmdModChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
b550635214c9c8d1bf9953a262410095
  menu_title19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Modify character"#) -}
db40883c583967c3e302951c04ea3706
  menu_title2 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title26
                   Interface.menu_title3) -}
05a20be34f321fc32d69fa84a618ed2f
  menu_title20 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title21,
                  Interface.cmdMakeAct1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
139f8774de92415a1c339ec1a918a0ec
  menu_title21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Make an action"#) -}
716fe0e20d6c53b390a8e7a5db23a450
  menu_title22 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title23,
                  Interface.cmdListAct1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
60e15262662e8c2ce3709cab71ec5f8c
  menu_title23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "List Action"#) -}
ef557f70146706a5d326b3421267a11e
  menu_title24 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title25,
                  Interface.cmdSaveChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
09882320e52201719e134f788010cbc1
  menu_title25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Save Character"#) -}
08cdc7ee27f9d4509fbfcedcf3281b13
  menu_title26 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title27,
                  Interface.cmdListChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
2a36dc0af694e136ac90077d775be770
  menu_title27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "List Character"#) -}
a4a471a0160b52b805a8d0d1f516ff07
  menu_title28 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title29,
                  Interface.cmdRollAtr1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
0c6273cf50704ec8a9db4b0638b6bb06
  menu_title29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Roll attributes/skills"#) -}
bf4cb3264cefa8dbd21da5d1bac3f814
  menu_title3 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title24
                   Interface.menu_title4) -}
9a55fa6c537138fa0a2355736adde0d6
  menu_title30 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title31,
                  Interface.cmdNewChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
6822791a8fd144091953afc0989e80d3
  menu_title31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Create new Character"#) -}
45dd64a0f17cfc371bbdde58ef3e59b2
  menu_title4 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title22
                   Interface.menu_title5) -}
222732b3b9ee9b935f5eef69bb66feea
  menu_title5 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title20
                   Interface.menu_title6) -}
f80c644af54964eae84ebad63693b551
  menu_title6 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title18
                   Interface.menu_title7) -}
5f15ea5490a357612cce1fa6643a0541
  menu_title7 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title16
                   Interface.menu_title8) -}
26f263df828a7a37993eadaeec110fb2
  menu_title8 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title14
                   Interface.menu_title9) -}
ce0ce824596d9c3840595aedc06d0cca
  menu_title9 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title12
                   Interface.menu_title10) -}
58aec4292be4c11ea6a62d8a68079a5b
  modifyCharacter ::
    AST.System -> [AST.Character] -> GHC.Types.IO [AST.Character]
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdModChar2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
390d3e4c639a5526785454eda292f98c
  name_skill :: AST.Skills -> AST.Name
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.Skills) ->
                 case ds of wild { AST.Skill name ds1 -> name }) -}
68ca0a6844f69e33aff25ba8023b28ee
  printRoll ::
    ([GHC.Integer.Type.Integer], [GHC.Integer.Type.Integer],
     GHC.Integer.Type.Integer)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([GHC.Integer.Type.Integer], [GHC.Integer.Type.Integer],
                          GHC.Integer.Type.Integer)) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 Interface.$wprintRoll ww1 ww2 ww3 }) -}
385ffce39bbe08eadaafba5d61e9c5a2
  printRoll1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
cb8a5f0347cfa6d2af3a65afca66cc2a
  printSkillClass ::
    [AST.Skills] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
cb351397de042421835e7d60dbbb080e
  putAndWait :: GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.putAndWait1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
67379ae784340d3b13b321f5dfbb596d
  putAndWait1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s :: GHC.Base.String)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        s
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 System.IO.getLine1 ipv2 } }) -}
52cbdd0c33f16dbc02b6e109043c95c7
  roll_skilatr :: AST.System -> [AST.Character] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdRollAtr2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
af717b4801f233b69d3b733aac41be1d
  saveCharacther :: [AST.Character] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdSaveChar2
                  `cast`
                (<[AST.Character]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
37b6bf67246524616090e61f7a27262c
  showAtributes :: AST.Character -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.showAtributes1
                  `cast`
                (<AST.Character>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
44efb6b8079db9c13fb2f9ac47d4b716
  showAtributes1 ::
    AST.Character
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Character)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.PC ww1 ww2 ww3 ->
                 Interface.$wshowAtributes ww1 ww2 ww3 w1 }) -}
bf788b1d1ac738f6b59d7d40435937c1
  showCharacter :: [AST.Character] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdShowChar2
                  `cast`
                (<[AST.Character]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1919c61844ff818e9209a375063ff8a7
  skilatr_list ::
    Mannager.Env -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
35f0669da83bcaab3df2729ca3da6f2a
  skillTitle :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "------------------------------------------------\n\
                   \Choose the skill class - enter 0 when you finish\n\
                   \------------------------------------------------\n"#) -}
fcd5a8667fefa276f2f35aac7c41ede2
  skill_picker ::
    [AST.Skills] -> [AST.Skills] -> GHC.Types.IO [AST.Skills]
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar3
                  `cast`
                (<[AST.Skills]>_R
                 ->_R <[AST.Skills]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Skills]>_R)) -}
d4d52d3527eac4f0808460e92add5237
  start :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Interface.start1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
3551e893492caa60c4e80444fadde326
  start1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Interface.fileStarter1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f7583988c58cd7cd3847d7ed1afceca8
  welcome :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "|------------------------------------------|\n\
                   \|       Welcome to GoblinBurner v1.8       |\n\
                   \|------------------------------------------|\n\
                   \\n"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

