
==================== FINAL INTERFACE ====================
2017-03-22 14:55:17.519425 UTC

interface GoblinBurner-0.1.0.0-9BGpxHuB4WvZG8Ab7rdhV:Interface 8002
  interface hash: 401e7f3b4e8ce43b117e0d6b13ceea39
  ABI hash: 982b54e27e9edba8d3b5aa7dfb4163e7
  export-list hash: ab54e4d97d6400e23c9ba0ec120c8b51
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interface.action_list
  Interface.actionsFromSystem
  Interface.character_list
  Interface.cmdDelChar
  Interface.cmdExit
  Interface.cmdListAct
  Interface.cmdListChar
  Interface.cmdLoadChar
  Interface.cmdMakeAct
  Interface.cmdModChar
  Interface.cmdNewChar
  Interface.cmdRollAtr
  Interface.cmdSaveChar
  Interface.cmdShowChar
  Interface.create_char
  Interface.delete_character
  Interface.envFromCharacter
  Interface.fileStarter
  Interface.generalTrhowFromSystem
  Interface.get_attributes
  Interface.listCon
  Interface.listEnv
  Interface.loadCharaterInterface
  Interface.make_action
  Interface.menu
  Interface.menu_list
  Interface.menu_title
  Interface.modifyCharacter
  Interface.name_skill
  Interface.printRoll
  Interface.printSkillClass
  Interface.putAndWait
  Interface.roll_skilatr
  Interface.saveCharacther
  Interface.showAtributes
  Interface.showCharacter
  Interface.skilatr_list
  Interface.skillTitle
  Interface.skill_picker
  Interface.skill_update
  Interface.skills_modifier
  Interface.start
  Interface.welcome
module dependencies: AST Mannager Parser
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
import  -/  AST 9c55e0321b218d3946d7f66413c3601c
  exports: 790fa163781c6789615dccc145b86d73
  Action 5c484ea8d976c99055ab31eb15645f87
  Atr 8be751fc99052a89e9a9bd6b9163dc6f
  Character 577b7d529bf2b50c23293b69a67d8c2f
  DepSys 87413475971afbf7d8af6ad7ccd81c99
  Game 2c1f147569371d0ad5f1aa762d465f52
  Gm 62ffd867c97786469a9424b1be3c9ab5
  Name d833e2277e74c61d9822e98cc2f4a2a9
  PC 919c3b3bc72b363c6539fb82db45aebe
  Skill 29a0cd68995f28c0cf0a524fb930feb4
  Skills 720f0cae70fc84fbe12d3ad9dd9a3c07
  System ed8187dd3058901d19e252d8b4f3681d
  ThrowsGen d59d5e638a2bfb45a11e5394743c01d0
  UAct 75461efabe39211a11043e4d95fea0b1
import  -/  Mannager 09ab3963363cce40621b20c91a85a706
  exports: 8d5f8926a939a7462beb30aeef1bcbb3
  Env 586b991ca61735c8c4f09b0d9994db78
  characterListModify dc5d6444594b0bb963ca47166c0a1637
  character_creation 3c386baf2f128150d155b53886c7f043
  dices_thrower a9a60df4d528848013e1d77e280c9f80
  length' fff55042ac2dc5aa8f42318f756a497e
  nth 9ee0006dacd36b067c6413a3ffdea4a2
  skilatr_thrower 8886ed87d81101c5b0ceed8a1da0385a
  system_depurator 20244db579ce4d49232c5d1b708a487b
  takeOut 1c75a3b11e4f747be6373e1ec8d07848
import  -/  Parser bb83197aec087d2e74c5bcc382d768b8
  exports: 0fdd2aef74e118e1a69e0cbcff0e5c0c
  loadCharacter 031620e2e7435324b08e322a55d5456c
  num_parse e61f3c6b8c1b13a906269cd892ddf450
  parseSystem 4324163ea8da0f67a78777cf44119855
  totParser 4b5ff01700d73efe6284edf71bce3f29
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.String 82047932fe8b05f9590326d15e87580c
import  -/  process-1.4.3.0@process-1.4.3.0:System.Process 1ee59b956b7cad68338d3f6ab3e772ed
251a3da097ba7e4733caccf08eecfdfe
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interface.$trModule2
                   Interface.$trModule1) -}
fa135b6f96ad40b3e2c3ad72e7c4f433
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Interface"#) -}
6d759f7e1fa02976eb25dd998fa6dd08
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "GoblinBurner-0.1.0.0-9BGpxHuB4WvZG8Ab7rdhV"#) -}
dd1b708e532bb8d033b6f2fb76676722
  $wcmdListAct ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        w of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case ww of wild {
                           AST.Sys ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8
                           -> case Interface.actionsFromSystem1 ret_ty GHC.Base.String of {}
                           AST.DepSys act ds ds2 ds3 ds4 ds5
                           -> GHC.Base.++
                                @ GHC.Types.Char
                                (Interface.action_list act Interface.cmdDelChar3)
                                Interface.cmdListAct2 })
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) } } }) -}
1ff55e8697213b07befe657abe36b997
  $wcmdListChar ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        w of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Interface.character_list ww1 Interface.cmdDelChar3)
                           Interface.cmdListAct2)
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) } } }) -}
1143734163e6d31e46a43a0907c69864
  $wcmdLoadChar ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdLoadChar4 w of ds1 { (#,#) ipv ipv1 ->
                 let {
                   fname :: GHC.Base.String
                   = GHC.CString.unpackAppendCString# "files/"# ipv1
                 } in
                 case GHC.IO.Handle.FD.openFile1
                        fname
                        GHC.IO.IOMode.ReadMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ [AST.Character]
                         (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                         Interface.cmdLoadChar2
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[AST.Character]>_R))
                         GHC.Tuple.()
                         fname
                         ipv5)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError [AST.Character]>_R) of wild {
                   Data.Either.Left er
                   -> (# ipv4, (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #)
                   Data.Either.Right a
                   -> (# ipv4,
                         (AST.Gm ww (GHC.Base.++ @ AST.Character a ww1),
                          GHC.Types.[] @ GHC.Types.Char) #) } } } }) -}
61f69b5da9a556f44c3f192ed1386ff0
  $wprintRoll ::
    [GHC.Integer.Type.Integer]
    -> [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: [GHC.Integer.Type.Integer])
                   (ww1 :: [GHC.Integer.Type.Integer])
                   (ww2 :: GHC.Integer.Type.Integer) ->
                 GHC.CString.unpackAppendCString#
                   "The total of the roll is: "#
                   (case GHC.Show.$w$cshowsPrec1
                           0#
                           ww2
                           (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.: @ GHC.Types.Char ww4 ww5)
                      (GHC.CString.unpackAppendCString#
                         "\n\
                         \The dice roll where:\n"#
                         (GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Show.$fShowInteger_$cshowList
                               ww
                               (GHC.Types.[] @ GHC.Types.Char))
                            (GHC.CString.unpackAppendCString#
                               "\n\
                               \The dice plus de modifier:\n"#
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  (GHC.Show.$fShowInteger_$cshowList
                                     ww1
                                     (GHC.Types.[] @ GHC.Types.Char))
                                  Interface.printRoll1)))) })) -}
169573bd2cf42891184b7dfd4c269ca8
  $wshowAtributes ::
    AST.Name
    -> [(AST.Name, GHC.Integer.Type.Integer)]
    -> [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.Name)
                   (ww1 :: [(AST.Name, GHC.Integer.Type.Integer)])
                   (ww2 :: [GHC.Base.String])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        w of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Name: "#
                           (GHC.Base.++
                              @ GHC.Types.Char
                              ww
                              (GHC.CString.unpackAppendCString#
                                 "\n\
                                 \Attributes: \n"#
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    (Interface.listEnv ww1)
                                    (GHC.CString.unpackAppendCString#
                                       "\n\
                                       \Conditions: \n"#
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          (Interface.listCon ww2)
                                          Interface.cmdShowChar3))))))
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } }) -}
633c25ec0dfcadb37fa64c95eca727bf
  $wskill_picker ::
    [AST.Skills]
    -> [AST.Skills]
    -> [AST.Name]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([AST.Skills], [AST.Name]) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0] -}
56f1dea2bac9693b474b03eaee296f98
  $wskill_update ::
    Mannager.Env
    -> AST.Name
    -> GHC.Integer.Type.Integer
    -> (# (AST.Variable, GHC.Integer.Type.Integer),
          [(AST.Variable, GHC.Integer.Type.Integer)] #)
  {- Arity: 3, Strictness: <S,1*U><S,U><L,U>, Inline: [0] -}
f04bbc6555ee3a00948aec3f0ec009f4
  action_list ::
    [AST.Action] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
77b88771324513340db811b426d7bbb3
  actionsFromSystem :: AST.System -> [AST.Action]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.System) ->
                 case ds of wild {
                   AST.Sys ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6
                   -> Interface.actionsFromSystem1
                   AST.DepSys act ds1 ds2 ds3 ds4 ds5 -> act }) -}
804b832c0c577075a38b902c68aebd08
  actionsFromSystem1 :: [AST.Action]
  {- Strictness: x -}
d7ddaf54a8a800040ea8973e834238b7
  character_list ::
    [AST.Character] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
62ac4c909c915b1d4fe2d1614f2fdfd0
  cmdDelChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdDelChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
38b9efe3475b0f67e201f63eeb594bb3
  cmdDelChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdDelChar2 char eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system ipv1, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
98cafd912727ff4aa59ed169dd85b6f7
  cmdDelChar2 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (char :: [AST.Character])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Which character you want to delete?\n"#
                           (Interface.character_list char Interface.cmdDelChar3))
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Mannager.takeOut
                      @ AST.Character
                      (Parser.num_parse ipv5)
                      char #) } } }) -}
f0b49e226a5ad096bad74d3cd26b58af
  cmdDelChar3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
4fc20873bf0ce5dd80c7a2aad56a209b
  cmdDelChar4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "clear"#) -}
0921cd5ec2b41382180041e423864646
  cmdExit :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdExit1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
a9d8b91df1e23a74b010a0da88f529a5
  cmdExit1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Interface.cmdExit3
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2, (g, Interface.cmdExit2) #) } }) -}
39f280134191eda8d82dc9437442b47c
  cmdExit2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Exit"#) -}
87e9ec450c84c1b4e70e89ad1398d591
  cmdExit3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Goodbye!...\n"#) -}
63c4236a39392c74438a71d075afcaff
  cmdListAct :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdListAct1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
c21e395417db290917c360937802443f
  cmdListAct1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdListAct ww1 ww2 w1 }) -}
7ce12fd496b233bce74adff02332667b
  cmdListAct2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Press any key to continue \n"#) -}
be5c1e84eb19bfb9eedec4b0d083d72f
  cmdListChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdListChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
acc7f4a94b1db8775372ab3610368193
  cmdListChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdListChar ww1 ww2 w1 }) -}
8596570bcb45f97563dc8e340e98309e
  cmdLoadChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdLoadChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
f129c9d7163ab53889c1dd6435473ada
  cmdLoadChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdLoadChar ww1 ww2 w1 }) -}
69da8c1ebb6dffd6db2a1e7beb4b81f3
  cmdLoadChar2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([AST.Character]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([AST.Character]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Parser.num_parse4
                   @ [AST.Character]
                   Interface.cmdLoadChar3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[AST.Character]>_R))) -}
9333764154ab286c1cad34001560d94e
  cmdLoadChar3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([AST.Character]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([AST.Character]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w2 :: [AST.Character]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: [AST.Character]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Parser.$wloadCharacter
                   (GHC.Types.[] @ AST.Character)
                   @ b
                   w1
                   w2
                   w4) -}
71eea15b76ec06fb2f28a5c3f077ce4a
  cmdLoadChar4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Interface.cmdLoadChar5
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 System.IO.getLine1 ipv2 } }) -}
3d06ae237eb315700d5f7752fbe0313a
  cmdLoadChar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Please enter your character file \n"#) -}
16d75357a293f28acb80085c4a3942d5
  cmdMakeAct :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdMakeAct1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
dd06fe18e739cb85053b237e819c8211
  cmdMakeAct1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdMakeAct2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
4f0d89a589d0b7d48023f33221a83f11
  cmdMakeAct2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
84b0160a0dfbcab59f7badec2a79a55e
  cmdModChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdModChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
2aa998fdfcb94edef2a2d3ed12866043
  cmdModChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdModChar2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system ipv1, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
8106502ed83d72fc2edfa33cb3b56b0d
  cmdModChar2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U> -}
8f3396871574a96950f9f0a50a67b7a9
  cmdNewChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
e9626748eb2c025e3b0befb56243a379
  cmdNewChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdNewChar2 system eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system (GHC.Types.: @ AST.Character ipv1 char),
                     GHC.Types.[] @ GHC.Types.Char) #) } }) -}
b5308b0954e428a5ec218caeb17754b1
  cmdNewChar2 ::
    AST.System
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, AST.Character #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: AST.System)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild {
                   AST.Sys ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6
                   -> case Interface.cmdNewChar6
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, AST.Character #)
                      of {}
                   AST.DepSys ds1 attr depAttr skl ds2 ds3
                   -> case System.Process.system1
                             Interface.cmdDelChar4
                             eta of ds4 { (#,#) ipv ipv1 ->
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Interface.cmdNewChar5
                             GHC.Types.False
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.IO.Handle.Internals.wantReadableHandle_1
                             @ GHC.Base.String
                             GHC.IO.Handle.Text.hGetLine4
                             GHC.IO.Handle.FD.stdin
                             GHC.IO.Handle.Text.hGetLine2
                               `cast`
                             (<GHC.IO.Handle.Types.Handle__>_R
                              ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      case attr of wild1 { AST.Atr ds7 list ->
                      case Interface.cmdNewChar4
                             list
                             (GHC.Types.[] @ (AST.Variable, GHC.Integer.Type.Integer))
                             ipv4 of ds8 { (#,#) ipv6 ipv7 ->
                      case Interface.$wskill_picker
                             skl
                             (GHC.Types.[] @ AST.Skills)
                             (GHC.Types.[] @ AST.Name)
                             ipv6 of ds9 { (#,#) ipv8 ipv9 ->
                      case ipv9 of wild2 { (,) s l ->
                      Interface.cmdNewChar3
                        (Mannager.character_creation ipv5 ipv7 depAttr s)
                        l
                        ipv8 } } } } } } } }) -}
534b594b28ef3d70e15f863c5fd8e2ed
  cmdNewChar3 ::
    AST.Character
    -> [AST.Name]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, AST.Character #)
  {- Arity: 3, Strictness: <L,U(U,U,U)><S,1*U><S,U> -}
74f602a4c12737207c2236d915d25f26
  cmdNewChar4 ::
    [AST.Name]
    -> Mannager.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Mannager.Env #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
8b4d2fd1f7f9a621965254244706a588
  cmdNewChar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Enter your character name!\n"#) -}
74bdd7693518b0e86d7f030460ff625c
  cmdNewChar6 :: GHC.Types.IO AST.Character
  {- Strictness: x -}
e7b89e70df10bfde1ee59d087a888fe6
  cmdRollAtr :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdRollAtr1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
e3c9d87fff8711ec45b84e49f7f23821
  cmdRollAtr1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdRollAtr2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
32a6f7fb698d40989c8afd68e69d9084
  cmdRollAtr2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U> -}
63d212536ab60deaae274448e634ca81
  cmdSaveChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdSaveChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
730767b1ec2fcffbea92e76cbe7c9bbe
  cmdSaveChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdSaveChar2 char eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
c530e9fc5a18859c890217be663b1302
  cmdSaveChar2 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
5aae8d66c6bf0f60d33c4679f6b26eed
  cmdShowChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdShowChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
7c303d6d62cbba3bbba98f5922cc2c8a
  cmdShowChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdShowChar2 char eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
7af967c018dd3902e90000b4509bca6c
  cmdShowChar2 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (chars :: [AST.Character])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Interface.character_list chars Interface.cmdDelChar3)
                           Interface.cmdShowChar5)
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Mannager.nth
                        @ AST.Character
                        (case (Text.Parsec.Prim.runPT
                                 @ GHC.Base.String
                                 @ Data.Functor.Identity.Identity
                                 @ GHC.Types.Char
                                 @ ()
                                 @ GHC.Integer.Type.Integer
                                 (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                                 Parser.num_parse2
                                   `cast`
                                 (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                           <[GHC.Types.Char]>_R
                                           <()>_R
                                           <Data.Functor.Identity.Identity>_R
                                           <GHC.Integer.Type.Integer>_R))
                                 GHC.Tuple.()
                                 (GHC.Types.[] @ GHC.Types.Char)
                                 ipv5)
                                `cast`
                              (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      Text.Parsec.Error.ParseError
                                      GHC.Integer.Type.Integer>_R) of wild {
                           Data.Either.Left err -> Interface.cmdShowChar4
                           Data.Either.Right a
                           -> GHC.Integer.Type.minusInteger a Interface.cmdDelChar3 })
                        chars of ww { AST.PC ww1 ww2 ww3 ->
                 Interface.$wshowAtributes ww1 ww2 ww3 ipv4 } } } }) -}
85ea6c47c29ea607a632b59504bcb8ae
  cmdShowChar3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Press any key to continue \n"#) -}
7dbcd846f892c0cbcc0d26382631686f
  cmdShowChar4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
050eefeab584f18baefabc10f445d6cb
  cmdShowChar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Which character you want to see?\n"#) -}
bb1fc0cb8588ceed3f5205f53eb7288c
  create_char :: AST.System -> GHC.Types.IO AST.Character
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar2
                  `cast`
                (<AST.System>_R ->_R Sym (GHC.Types.N:IO[0] <AST.Character>_R)) -}
204252cf17a1090829def93d0477d1b0
  delete_character :: [AST.Character] -> GHC.Types.IO [AST.Character]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdDelChar2
                  `cast`
                (<[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
e8f8bbf359ad5279dc52a5ee18edd816
  envFromCharacter :: AST.Character -> Mannager.Env
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.Character) ->
                 case ds of wild { AST.PC ds1 env ds2 -> env }) -}
92f63777b171cf45230de90a2e44f108
  fileStarter :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.fileStarter1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cac91499831ae395fffe4a3226050d1e
  fileStarter1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U> -}
22c871142134c2eb4897649988d2fd4f
  generalTrhowFromSystem :: AST.System -> AST.ThrowsGen
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.System) ->
                 case ds of wild {
                   AST.Sys ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6
                   -> Interface.generalTrhowFromSystem1
                   AST.DepSys ds1 ds2 ds3 ds4 ds5 throwsGen -> throwsGen }) -}
196869d464b992330316dd8bec538909
  generalTrhowFromSystem1 :: AST.ThrowsGen
  {- Strictness: x -}
ba0591b54195db555a1058347957288e
  get_attributes ::
    [AST.Name] -> Mannager.Env -> GHC.Types.IO Mannager.Env
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar4
                  `cast`
                (<[AST.Name]>_R
                 ->_R <Mannager.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Mannager.Env>_R)) -}
cdb66b499082144af97a6d62492692e6
  listCon :: [GHC.Base.String] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
98275cce65bf9604e2180fe7b07290be
  listEnv :: Mannager.Env -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
feaf9ed5d88a339ef4093e5604a75ed5
  loadCharaterInterface :: GHC.Types.IO [AST.Character]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.loadCharaterInterface1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
c23b59efe6499942307252944f83000e
  loadCharaterInterface1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdLoadChar4 s of ds1 { (#,#) ipv ipv1 ->
                 let {
                   fname :: GHC.Base.String
                   = GHC.CString.unpackAppendCString# "files/"# ipv1
                 } in
                 case GHC.IO.Handle.FD.openFile1
                        fname
                        GHC.IO.IOMode.ReadMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ [AST.Character]
                         (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                         Interface.cmdLoadChar2
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[AST.Character]>_R))
                         GHC.Tuple.()
                         fname
                         ipv5)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError [AST.Character]>_R) of wild {
                   Data.Either.Left er -> (# ipv4, GHC.Types.[] @ AST.Character #)
                   Data.Either.Right a -> (# ipv4, a #) } } } }) -}
6ae97935dcf99589b32a36d6fa7faa71
  make_action :: AST.System -> [AST.Character] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdMakeAct2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9a42b4bc31032ef73b4ed64e7521174c
  menu ::
    AST.Game
    -> [(GHC.Base.String,
         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
    -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.menu1
                  `cast`
                (<AST.Game>_R
                 ->_R <[(GHC.Base.String,
                         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6a6e9736f99222ca599153a08475b0d9
  menu1 ::
    AST.Game
    -> [(GHC.Base.String,
         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
e671c0c3498c5ce78f2dcf590195ba49
  menu_list ::
    [(GHC.Base.String, a)]
    -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
990628c266ed107473ab3f8c37a2d09e
  menu_title ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title30
                   Interface.menu_title1) -}
23a43af59e3272a0fa47993e3abb1d4e
  menu_title1 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title28
                   Interface.menu_title2) -}
ed86f692153d6da772a2e65ebac58491
  menu_title10 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title11
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)))) -}
42b19dbddfeb339d93b476a2b72cec96
  menu_title11 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.cmdExit2,
                  Interface.cmdExit1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
ff380f14a708272f7c28a5e948414716
  menu_title12 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title13,
                  Interface.cmdShowChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
bf298bd2b29b469f6cefd1ca9facd8bf
  menu_title13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "View Character"#) -}
9e73ee75d9171c1de04a6d3f882184e0
  menu_title14 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title15,
                  Interface.cmdLoadChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
68f644be0dc1a343219b3c4f349bb09d
  menu_title15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Load Character"#) -}
7fa573d311bae3a3aa2503b5d8103e70
  menu_title16 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title17,
                  Interface.cmdDelChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
6b21c7839939f76c62d8908b7630e248
  menu_title17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Delete Character"#) -}
69ec9d9e64da8e1ea510c6d1f3b99682
  menu_title18 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title19,
                  Interface.cmdModChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
b550635214c9c8d1bf9953a262410095
  menu_title19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Modify character"#) -}
2abd32238b5b244aa16bfb041833e966
  menu_title2 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title26
                   Interface.menu_title3) -}
05a20be34f321fc32d69fa84a618ed2f
  menu_title20 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title21,
                  Interface.cmdMakeAct1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
139f8774de92415a1c339ec1a918a0ec
  menu_title21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Make an action"#) -}
716fe0e20d6c53b390a8e7a5db23a450
  menu_title22 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title23,
                  Interface.cmdListAct1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
60e15262662e8c2ce3709cab71ec5f8c
  menu_title23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "List Action"#) -}
ef557f70146706a5d326b3421267a11e
  menu_title24 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title25,
                  Interface.cmdSaveChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
09882320e52201719e134f788010cbc1
  menu_title25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Save Character"#) -}
08cdc7ee27f9d4509fbfcedcf3281b13
  menu_title26 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title27,
                  Interface.cmdListChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
2a36dc0af694e136ac90077d775be770
  menu_title27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "List Character"#) -}
a4a471a0160b52b805a8d0d1f516ff07
  menu_title28 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title29,
                  Interface.cmdRollAtr1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
0c6273cf50704ec8a9db4b0638b6bb06
  menu_title29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Roll attributes/skills"#) -}
2796dfe3b5af3288e5c3a27bce8ddff8
  menu_title3 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title24
                   Interface.menu_title4) -}
86e9bc8b59f7e9f6b8ff41b3d6860575
  menu_title30 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title31,
                  Interface.cmdNewChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
6822791a8fd144091953afc0989e80d3
  menu_title31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Create new Character"#) -}
ebe2f088a155d902175733e108c57116
  menu_title4 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title22
                   Interface.menu_title5) -}
7ac4159808191ad376400f83bfd4e2ae
  menu_title5 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title20
                   Interface.menu_title6) -}
228952f70cbff2874b9b3c287ca62628
  menu_title6 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title18
                   Interface.menu_title7) -}
dadc1b702fa7d07fc5f5df5791922cc9
  menu_title7 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title16
                   Interface.menu_title8) -}
f2047bdfbe648edab9c35d2b70e46c02
  menu_title8 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title14
                   Interface.menu_title9) -}
f348b73aeb7815b51dfe3adc3f47068b
  menu_title9 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title12
                   Interface.menu_title10) -}
58aec4292be4c11ea6a62d8a68079a5b
  modifyCharacter ::
    AST.System -> [AST.Character] -> GHC.Types.IO [AST.Character]
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdModChar2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
390d3e4c639a5526785454eda292f98c
  name_skill :: AST.Skills -> AST.Name
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.Skills) ->
                 case ds of wild { AST.Skill name ds1 -> name }) -}
68ca0a6844f69e33aff25ba8023b28ee
  printRoll ::
    ([GHC.Integer.Type.Integer], [GHC.Integer.Type.Integer],
     GHC.Integer.Type.Integer)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([GHC.Integer.Type.Integer], [GHC.Integer.Type.Integer],
                          GHC.Integer.Type.Integer)) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 Interface.$wprintRoll ww1 ww2 ww3 }) -}
385ffce39bbe08eadaafba5d61e9c5a2
  printRoll1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
cb8a5f0347cfa6d2af3a65afca66cc2a
  printSkillClass ::
    [AST.Skills] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
cb351397de042421835e7d60dbbb080e
  putAndWait :: GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.putAndWait1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
67379ae784340d3b13b321f5dfbb596d
  putAndWait1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s :: GHC.Base.String)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdDelChar4
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        s
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 System.IO.getLine1 ipv2 } }) -}
52cbdd0c33f16dbc02b6e109043c95c7
  roll_skilatr :: AST.System -> [AST.Character] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdRollAtr2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
af717b4801f233b69d3b733aac41be1d
  saveCharacther :: [AST.Character] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdSaveChar2
                  `cast`
                (<[AST.Character]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
37b6bf67246524616090e61f7a27262c
  showAtributes :: AST.Character -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.showAtributes1
                  `cast`
                (<AST.Character>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
44efb6b8079db9c13fb2f9ac47d4b716
  showAtributes1 ::
    AST.Character
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Character)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.PC ww1 ww2 ww3 ->
                 Interface.$wshowAtributes ww1 ww2 ww3 w1 }) -}
8560d2ebe9d4d5dbbd59177771cf28f6
  showCharacter :: [AST.Character] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdShowChar2
                  `cast`
                (<[AST.Character]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1919c61844ff818e9209a375063ff8a7
  skilatr_list ::
    Mannager.Env -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
35f0669da83bcaab3df2729ca3da6f2a
  skillTitle :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "------------------------------------------------\n\
                   \Choose the skill class - enter 0 when you finish\n\
                   \------------------------------------------------\n"#) -}
ee1d423183fde8f787043aa20b4e0c6b
  skill_picker ::
    [AST.Skills]
    -> ([AST.Skills], [AST.Name])
    -> GHC.Base.String
    -> GHC.Types.IO ([AST.Skills], [AST.Name])
  {- Arity: 4, Strictness: <L,U><S,1*U(U,U)><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.skill_picker1
                  `cast`
                (<[AST.Skills]>_R
                 ->_R <([AST.Skills], [AST.Name])>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <([AST.Skills], [AST.Name])>_R)) -}
06ecee3185389ff8ef424ccd3ef71c9e
  skill_picker1 ::
    [AST.Skills]
    -> ([AST.Skills], [AST.Name])
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([AST.Skills], [AST.Name]) #)
  {- Arity: 4, Strictness: <L,U><S,1*U(U,U)><L,A><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: [AST.Skills])
                   (w1 :: ([AST.Skills], [AST.Name]))
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Interface.$wskill_picker w ww1 ww2 w3 }) -}
1e14145d8004ed8eb1880094120ddcf6
  skill_update ::
    Mannager.Env
    -> AST.Name -> GHC.Integer.Type.Integer -> Mannager.Env
  {- Arity: 3, Strictness: <S,1*U><S,U><L,U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Mannager.Env)
                   (w1 :: AST.Name)
                   (w2 :: GHC.Integer.Type.Integer) ->
                 case Interface.$wskill_update w w1 w2 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ (AST.Variable, GHC.Integer.Type.Integer)
                   ww1
                   ww2 }) -}
f123b30a93ad80f0524b53d0bd06b316
  skills_modifier ::
    AST.Character -> [AST.Name] -> GHC.Types.IO AST.Character
  {- Arity: 3, Strictness: <L,U(U,U,U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar3
                  `cast`
                (<AST.Character>_R
                 ->_R <[AST.Name]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <AST.Character>_R)) -}
d4d52d3527eac4f0808460e92add5237
  start :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Interface.start1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
3551e893492caa60c4e80444fadde326
  start1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Interface.fileStarter1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f7583988c58cd7cd3847d7ed1afceca8
  welcome :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "|------------------------------------------|\n\
                   \|       Welcome to GoblinBurner v1.8       |\n\
                   \|------------------------------------------|\n\
                   \\n"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

