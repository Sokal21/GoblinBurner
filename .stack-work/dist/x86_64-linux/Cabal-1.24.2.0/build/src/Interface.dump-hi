
==================== FINAL INTERFACE ====================
2017-04-03 14:13:55.407855 UTC

interface GoblinBurner-0.1.0.0-I1JAjz4cEJL8vh9rdrHCnV:Interface 8002
  interface hash: c871e21e2933f46df4fb83b959de4e26
  ABI hash: 6def310e4940c7326a128060e7d4b127
  export-list hash: fd698170041eaf669550a152946388aa
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interface.action_list
  Interface.actionsFromSystem
  Interface.character_list
  Interface.cmdDelChar
  Interface.cmdExit
  Interface.cmdListAct
  Interface.cmdListChar
  Interface.cmdLoadChar
  Interface.cmdMakeAct
  Interface.cmdModChar
  Interface.cmdNewChar
  Interface.cmdRollAtr
  Interface.cmdSaveChar
  Interface.cmdShowChar
  Interface.create_char
  Interface.delete_character
  Interface.envFromCharacter
  Interface.errorCharFile
  Interface.errorConFile
  Interface.fileStarter
  Interface.generalTrhowFromSystem
  Interface.get_attributes
  Interface.listCon
  Interface.listEnv
  Interface.loadCharaterInterface
  Interface.make_action
  Interface.menu
  Interface.menu_list
  Interface.menu_title
  Interface.modifyCharacter
  Interface.name_skill
  Interface.printRoll
  Interface.printSkillClass
  Interface.putAndWait
  Interface.roll_skilatr
  Interface.saveCharacther
  Interface.showAtributes
  Interface.showCharacter
  Interface.skilatr_list
  Interface.skillTitle
  Interface.skill_picker
  Interface.start
  Interface.welcome
module dependencies: AST Mannager Parser
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      readline-1.0.3.0@readline-1.0.3.0-7WqJPjOS9HEE95ifi9FvTC
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
import  -/  AST d605159f34e87c9680775e51b7a2b049
  exports: e579a6374870f831902124cda1fe098c
  Action d3804f4a2fcfae2aa4978ea98a445fd1
  Atr dbffd3fb3ea30821f9be1fbedae83281
  Character 45f5edc128eb6aece66bf1e2a65dbb22
  Const b44452847abf94f62ce34c31abfd71a9
  DepSys fc4cb4f2883d912dfc7395622fbe26f5
  Error 59ecbc751d9a358898de559ef80e923c
  Game 94ae60b71af3dc34fc80afdbf5d3e824
  Gm 981d714425521345dc665e71a1e9e1ba
  Name 412a0cbdf0d605951c9a4b7594e7e936
  PC 7c823e5d53c614cb20a1f5b8cfe6769d
  Plus 70462ddbf00ea172927a98a184010bcf
  Skill c820151ac35457ec3fa5c7ef0d288584
  Skills 75d29fd57116e502fbd25cafdc59c879
  System 7dadbf952eaaa51839dcd5b72dc1cd40
  ThrowsGen e93310021b2615a8d6cd509ac59e4852
  UAct 501bee6c487b4adbf175b39d37fd6a73
import  -/  Mannager d95e2dd9e5a76e4680148d0f9ca6539b
  exports: f15d8a7727703f68e058c478376c3646
  Env 889e7ed3d0dbb9b247ddec7c706e9718
  characterListModify 6df5a5cf52e3509d0d79e4b4042c0d90
  character_creation 37f442b8e8f3fbc891ce20b285dee511
  dices_thrower 1d12f81ae326d90b7b064e54d9ed4503
  nth d44d2d3b1c7f91e4aaad2aa1f7c469f9
  skilatr_thrower 9876b82965e8329223b4f06755f0fa7b
  system_depurator 15df3aa675a9971a2b9cec796bad1f00
  takeOut c118a59855d8eb6a8e7ca8156d8ba7ab
import  -/  Parser 4706971241401d9ad00f58b97bac0200
  exports: 0fc83fb0d80058520111fed80e996b22
  loadCharacter 4bf26677f40115c4fadc41e1187a92b4
  num_parse a58e99846592eb6b088a0eb60e53b134
  parseSystem 2634dba3880d10042eda7ac0fe120283
  totParser 3d6edc32739c5d08b0bffbba62eefc22
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Exception.Base 1e106916283856f4d9caeddab92cd861
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Exception 5064be4c355632a1d1c4f2322f56ac52
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.Error ce2217365701a41a4565dbdaf79d63d9
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.String 82047932fe8b05f9590326d15e87580c
import  -/  process-1.4.3.0@process-1.4.3.0:System.Process 1ee59b956b7cad68338d3f6ab3e772ed
import  -/  readline-1.0.3.0@readline-1.0.3.0-7WqJPjOS9HEE95ifi9FvTC:System.Console.Readline e4317f0e6b4cad7d40213323b8ee5b18
9fa07ff99911ce7494fbfd46a2d2acd1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interface.$trModule2
                   Interface.$trModule1) -}
33d015863d8fe9ae1886f1f9de16c812
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Interface"#) -}
9bab433527505c0a6b34958e38a50ec6
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "GoblinBurner-0.1.0.0-I1JAjz4cEJL8vh9rdrHCnV"#) -}
a77be99de5e9c225013413127494ec98
  $wcmdDelChar ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdDelChar4
                        (Interface.cmdDelChar3
                           @ [GHC.Types.Char]
                           (GHC.Types.: @ GHC.Types.Char)
                           (Interface.character_list ww1 Interface.cmdDelChar2))
                        w of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm
                       ww
                       (Mannager.takeOut @ AST.Character (Parser.num_parse ipv1) ww1),
                     GHC.Types.[] @ GHC.Types.Char) #) }) -}
2b64aa03b1dc5f1d8bd567f2d05313e2
  $wcmdListAct ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdDelChar4
                        (case ww of wild {
                           DEFAULT
                           -> case Interface.actionsFromSystem1 ret_ty GHC.Base.String of {}
                           AST.DepSys act ds ds1 ds2 ds3 ds4
                           -> GHC.Base.++
                                @ GHC.Types.Char
                                (Interface.action_list act Interface.cmdDelChar2)
                                Interface.cmdListAct2 })
                        w of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) }) -}
d3eb1d858cc113bdfe2b50a22940f9b4
  $wcmdListChar ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdDelChar4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Interface.character_list ww1 Interface.cmdDelChar2)
                           Interface.cmdListAct2)
                        w of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) }) -}
77a59aa04574ac228d7607ac01df6c0b
  $wcmdShowChar ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 3, Strictness: <L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.System)
                   (ww1 :: [AST.Character])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.List.$wlenAcc @ AST.Character ww1 0# of ww2 {
                   DEFAULT
                   -> case Interface.cmdShowChar3 ww1 w of ds1 { (#,#) ipv ipv1 ->
                      (# ipv, (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) }
                   0#
                   -> case Interface.cmdDelChar4
                             Interface.cmdShowChar2
                             w of ds1 { (#,#) ipv ipv1 ->
                      (# ipv, (AST.Gm ww ww1, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
b8be7bf75b712492a4df3972145b02ea
  $wprintRoll ::
    [GHC.Integer.Type.Integer]
    -> [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: [GHC.Integer.Type.Integer])
                   (ww1 :: [GHC.Integer.Type.Integer])
                   (ww2 :: GHC.Integer.Type.Integer) ->
                 GHC.CString.unpackAppendCString#
                   "The total of the roll is: "#
                   (case GHC.Show.$w$cshowsPrec1
                           0#
                           ww2
                           (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.: @ GHC.Types.Char ww4 ww5)
                      (GHC.CString.unpackAppendCString#
                         "\n\
                         \The dice roll where:\n"#
                         (GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Show.$fShowInteger_$cshowList
                               ww
                               (GHC.Types.[] @ GHC.Types.Char))
                            (GHC.CString.unpackAppendCString#
                               "\n\
                               \The dice plus de modifier:\n"#
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  (GHC.Show.$fShowInteger_$cshowList
                                     ww1
                                     (GHC.Types.[] @ GHC.Types.Char))
                                  Interface.printRoll1)))) })) -}
7b7101a5d17387517cbfe3d5ee7aaaf8
  $wshowAtributes ::
    AST.Name
    -> [(AST.Name, GHC.Integer.Type.Integer)]
    -> [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: AST.Name)
                   (ww1 :: [(AST.Name, GHC.Integer.Type.Integer)])
                   (ww2 :: [GHC.Base.String])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdDelChar4
                        (GHC.CString.unpackAppendCString#
                           "Name: "#
                           (GHC.Base.++
                              @ GHC.Types.Char
                              ww
                              (GHC.CString.unpackAppendCString#
                                 "\n\
                                 \Attributes: \n"#
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    (Interface.listEnv ww1)
                                    (GHC.CString.unpackAppendCString#
                                       "\n\
                                       \Conditions: \n"#
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          (Interface.listCon ww2)
                                          Interface.cmdShowChar4))))))
                        w of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
c013cc9e3bed4d88f0585f556b8b3273
  action_list ::
    [AST.Action] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
7a3ab14ba010f37f788161332134d8e1
  actionsFromSystem :: AST.System -> [AST.Action]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.System) ->
                 case ds of wild {
                   DEFAULT -> Interface.actionsFromSystem1
                   AST.DepSys act ds1 ds2 ds3 ds4 ds5 -> act }) -}
62381483e2ea16e63018499fd0716fa2
  actionsFromSystem1 :: [AST.Action]
  {- Strictness: x -}
13c2a43ecfe874ae77a59a14ba897ed6
  character_list ::
    [AST.Character] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
9bc85092b8bff3e2645029f7933ca8f6
  cmdDelChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdDelChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
9c03d68142b21aa93c99b415fba681cf
  cmdDelChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdDelChar ww1 ww2 w1 }) -}
cd05cefa716326cc114aa3574eb986e9
  cmdDelChar2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
88fa6bd08c543f61803403c65cc98298
  cmdDelChar3 :: (GHC.Types.Char -> b -> b) -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U>,
     Unfolding: (\ @ b
                   (c :: GHC.Types.Char -> b -> b)[OneShot]
                   (n :: b)[OneShot] ->
                 GHC.CString.unpackFoldrCString#
                   @ b
                   "Which character you want to delete?\n"#
                   c
                   n) -}
16824f593c02cc91eba58a405749b838
  cmdDelChar4 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
47dc716ed8ba8f8f453899824a7a6dea
  cmdExit :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdExit1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
9941a966579a51d24c9a2495401351bc
  cmdExit1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.system1
                        Interface.cmdExit4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Interface.cmdExit3
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2, (g, Interface.cmdExit2) #) } }) -}
4dd17db7342b4229285191d8ffb335d4
  cmdExit2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Exit"#) -}
a51beea703dbd4b49bb91a52dafdf95d
  cmdExit3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Goodbye!...\n"#) -}
cb40831c9c85b33b97462705652ea139
  cmdExit4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "clear"#) -}
59cf5b6e005546a5dc11ae7dce0c7362
  cmdListAct :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdListAct1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
c0770b5e25bfa9e89e4c36441e23349e
  cmdListAct1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdListAct ww1 ww2 w1 }) -}
1ee1ca7da3000ea328e72b03f6a7218f
  cmdListAct2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Press any key to continue \n"#) -}
5ba757f68986dc7b2876172f3f0e18ca
  cmdListChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdListChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
1015c666389f87d831a99d5a3ffe20da
  cmdListChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdListChar ww1 ww2 w1 }) -}
9a0ca2fa222cc794ac074a718847a372
  cmdLoadChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdLoadChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
92b40a5db8d8bd513a753ad8868d71d2
  cmdLoadChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdLoadChar2
                        (GHC.Types.[] @ GHC.Types.Char)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm
                       system
                       (GHC.Base.augment
                          @ AST.Character
                          (\ @ b (c :: AST.Character -> b -> b)[OneShot] (n :: b)[OneShot] ->
                           GHC.Base.foldr @ AST.Character @ b c n ipv1)
                          char),
                     GHC.Types.[] @ GHC.Types.Char) #) } }) -}
49187f95be7b709aa44fea557b116f7a
  cmdLoadChar2 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 2, Strictness: <L,1*U><S,U> -}
7dd3bf69505dca94309df22d7e8f5d34
  cmdMakeAct :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdMakeAct1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
d61b446d7e7c615287362659016f4451
  cmdMakeAct1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdMakeAct2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
7f2f6e0cc12d5fdeef89a2157f529ed2
  cmdMakeAct2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
87f53c2270f9da674a5e7ea0475e65f3
  cmdModChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdModChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
16836eea31a42f06b90ad83cfb73bece
  cmdModChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdModChar2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system ipv1, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
abdcdcf826463b3647af28ba4b1b7369
  cmdModChar2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U> -}
4ef88bdab37439887b8d7c3c8961a7a3
  cmdNewChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
ada6e399a0653fccab59c93ae621c211
  cmdNewChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdNewChar2 system eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (AST.Gm system (GHC.Types.: @ AST.Character ipv1 char),
                     GHC.Types.[] @ GHC.Types.Char) #) } }) -}
a32af3753bd326da2ba86d7c81d8cf43
  cmdNewChar2 ::
    AST.System
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, AST.Character #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: AST.System)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild {
                   DEFAULT
                   -> case Interface.cmdNewChar6
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, AST.Character #)
                      of {}
                   AST.DepSys ds1 attr depAttr skl ds2 ds3
                   -> case Interface.cmdDelChar4
                             Interface.cmdNewChar5
                             eta of ds4 { (#,#) ipv ipv1 ->
                      case attr of wild1 { AST.Atr ds5 list ->
                      case Interface.cmdNewChar4
                             list
                             (GHC.Types.[] @ (AST.Variable, GHC.Integer.Type.Integer))
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case Interface.cmdNewChar3
                             skl
                             (GHC.Types.[] @ AST.Skills)
                             ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                      (# ipv4,
                         Mannager.character_creation ipv1 ipv3 depAttr ipv5 #) } } } } }) -}
cbceb9cf9a7a4c37a58252e919f441f8
  cmdNewChar3 ::
    [AST.Skills]
    -> [AST.Skills]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Skills] #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
71538c60b654458e749d4c0f99b40057
  cmdNewChar4 ::
    [AST.Name]
    -> Mannager.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Mannager.Env #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
d4ca08468ee9888c446601e6b9bc7b49
  cmdNewChar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Enter your character name!\n"#) -}
78d23357caad837f06c2757e35e739cc
  cmdNewChar6 :: GHC.Types.IO AST.Character
  {- Strictness: x -}
189eaef526893f70459ca2719bfc98b7
  cmdRollAtr :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdRollAtr1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
b86228fef0a48c1e9ea8851c42f08fc8
  cmdRollAtr1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdRollAtr2
                        system
                        char
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
211fc3ced8c460ddef7a953bc7106fd8
  cmdRollAtr2 ::
    AST.System
    -> [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U> -}
05eaf5c2f13d6cc2cffc0720392bfb64
  cmdSaveChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdSaveChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
f4b6102cf2730670987282211c53333a
  cmdSaveChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (g :: AST.Game)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case g of wild { AST.Gm system char ->
                 case Interface.cmdSaveChar2 char eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, GHC.Types.[] @ GHC.Types.Char) #) } }) -}
cd47041d712dd25b0a2a34810e0636c9
  cmdSaveChar2 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (chars :: [AST.Character])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdDelChar4
                        (GHC.CString.unpackAppendCString#
                           "Which character do you want to save?\n"#
                           (Interface.character_list chars Interface.cmdDelChar2))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Mannager.nth
                        @ AST.Character
                        (case (Text.Parsec.Prim.runPT
                                 @ GHC.Base.String
                                 @ Data.Functor.Identity.Identity
                                 @ GHC.Types.Char
                                 @ ()
                                 @ GHC.Integer.Type.Integer
                                 (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                                 Parser.num_parse2
                                   `cast`
                                 (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                           <[GHC.Types.Char]>_R
                                           <()>_R
                                           <Data.Functor.Identity.Identity>_R
                                           <GHC.Integer.Type.Integer>_R))
                                 GHC.Tuple.()
                                 (GHC.Types.[] @ GHC.Types.Char)
                                 ipv1)
                                `cast`
                              (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      Text.Parsec.Error.ParseError
                                      GHC.Integer.Type.Integer>_R) of wild {
                           Data.Either.Left err -> Interface.cmdSaveChar3
                           Data.Either.Right a
                           -> GHC.Integer.Type.minusInteger a Interface.cmdDelChar2 })
                        chars of wild { AST.PC name xs ys ->
                 System.IO.writeFile1
                   (GHC.CString.unpackAppendCString# "files/"# name)
                   (GHC.Base.++
                      @ GHC.Types.Char
                      name
                      (GHC.CString.unpackAppendCString#
                         "\n"#
                         (GHC.Base.++
                            @ GHC.Types.Char
                            (Interface.listEnv xs)
                            (GHC.CString.unpackAppendCString#
                               "\n"#
                               (GHC.CString.unpackAppendCString#
                                  "CONDITION_MODIFIER\n"#
                                  (Interface.listCon ys))))))
                   ipv } }) -}
05d1cfee1d69c1ff4e9d4c6350de2146
  cmdSaveChar3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
11eeaa340f44af571ed889151e8c066d
  cmdShowChar :: AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)
  {- Arity: 2, Strictness: <S(LS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdShowChar1
                  `cast`
                (<AST.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)) -}
d73f52bdfb42ed21ca31b012b6e057a8
  cmdShowChar1 ::
    AST.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (AST.Game, GHC.Base.String) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Game)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.Gm ww1 ww2 ->
                 Interface.$wcmdShowChar ww1 ww2 w1 }) -}
9789c4eadaa2a0d2998d5b7344fb0638
  cmdShowChar2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "There is no characters\n"#) -}
da0dcfe2bddecd91b3a51f4d3b3650aa
  cmdShowChar3 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (chars :: [AST.Character])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdDelChar4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (Interface.character_list chars Interface.cmdDelChar2)
                           Interface.cmdShowChar5)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Mannager.nth
                        @ AST.Character
                        (case (Text.Parsec.Prim.runPT
                                 @ GHC.Base.String
                                 @ Data.Functor.Identity.Identity
                                 @ GHC.Types.Char
                                 @ ()
                                 @ GHC.Integer.Type.Integer
                                 (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                                 Parser.num_parse2
                                   `cast`
                                 (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                           <[GHC.Types.Char]>_R
                                           <()>_R
                                           <Data.Functor.Identity.Identity>_R
                                           <GHC.Integer.Type.Integer>_R))
                                 GHC.Tuple.()
                                 (GHC.Types.[] @ GHC.Types.Char)
                                 ipv1)
                                `cast`
                              (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      Text.Parsec.Error.ParseError
                                      GHC.Integer.Type.Integer>_R) of wild {
                           Data.Either.Left err -> Interface.cmdSaveChar3
                           Data.Either.Right a
                           -> GHC.Integer.Type.minusInteger a Interface.cmdDelChar2 })
                        chars of ww { AST.PC ww1 ww2 ww3 ->
                 Interface.$wshowAtributes ww1 ww2 ww3 ipv } }) -}
d9906788c011487235d8550e380b25b7
  cmdShowChar4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Press any key to continue \n"#) -}
bffe7984bf3af1ec9973b0a42df321b1
  cmdShowChar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Which character you want to see?\n"#) -}
22d8c50e69c1720ffe3e75ac6e7ab938
  create_char :: AST.System -> GHC.Types.IO AST.Character
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar2
                  `cast`
                (<AST.System>_R ->_R Sym (GHC.Types.N:IO[0] <AST.Character>_R)) -}
0cd451b91dc7f27a23c5d44767099093
  delete_character :: [AST.Character] -> GHC.Types.IO [AST.Character]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.delete_character1
                  `cast`
                (<[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
a203b78d4f4b83f58c9933f4c91b1f46
  delete_character1 ::
    [AST.Character]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AST.Character] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (char :: [AST.Character])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Interface.cmdDelChar4
                        (Interface.cmdDelChar3
                           @ [GHC.Types.Char]
                           (GHC.Types.: @ GHC.Types.Char)
                           (Interface.character_list char Interface.cmdDelChar2))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    Mannager.takeOut
                      @ AST.Character
                      (Parser.num_parse ipv1)
                      char #) }) -}
218135fc538a43ce921c109e87e13531
  envFromCharacter :: AST.Character -> Mannager.Env
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.Character) ->
                 case ds of wild { AST.PC ds1 env ds2 -> env }) -}
6c12359d7c7725097e3f9ca0056444f6
  errorCharFile ::
    GHC.IO.Exception.IOException
    -> GHC.Types.IO
         (Data.Either.Either Text.Parsec.Error.ParseError [AST.Character])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.errorCharFile1
                  `cast`
                (<GHC.IO.Exception.IOException>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  Text.Parsec.Error.ParseError [AST.Character]>_R)) -}
67d6753879b32f6e856a4baf9a2b0111
  errorCharFile1 ::
    GHC.IO.Exception.IOException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either Text.Parsec.Error.ParseError [AST.Character] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (2, True, True)
                (\ (e :: GHC.IO.Exception.IOException)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Interface.errorCharFile2 #)) -}
1eb68851d82bb5970d95337c6a2fc9cc
  errorCharFile2 ::
    Data.Either.Either Text.Parsec.Error.ParseError [AST.Character]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ [AST.Character]
                   (GHC.Types.[] @ AST.Character)) -}
260434c74a1664c3f7ae2232ad16814d
  errorConFile ::
    GHC.IO.Exception.IOException
    -> GHC.Types.IO
         (Data.Either.Either Text.Parsec.Error.ParseError AST.System)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.errorConFile1
                  `cast`
                (<GHC.IO.Exception.IOException>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either Text.Parsec.Error.ParseError AST.System>_R)) -}
803c43883c02a95dd94c6761b389fe96
  errorConFile1 ::
    GHC.IO.Exception.IOException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either Text.Parsec.Error.ParseError AST.System #)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (2, True, True)
                (\ (e :: GHC.IO.Exception.IOException)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Interface.errorConFile2 #)) -}
e42d20d34aa4ed271dbbe8fa330401e2
  errorConFile2 ::
    Data.Either.Either Text.Parsec.Error.ParseError AST.System
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ AST.System
                   Interface.errorConFile3) -}
5b49e982d8d07fd65b6d970338414896
  errorConFile3 :: AST.System
  {- Strictness: m3,
     Unfolding: (AST.Error Interface.errorConFile4) -}
912bbacd24a6f797da740ada1e61b284
  errorConFile4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Couldn't find this config file"#) -}
56f37b0a4e6291099b012c1c57b47989
  fileStarter :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.fileStarter1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b71636bbc48e30cdd8b2995e89ffa281
  fileStarter1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U> -}
3c93fd47174a95ad87301f9b3308fe51
  generalTrhowFromSystem :: AST.System -> AST.ThrowsGen
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.System) ->
                 case ds of wild {
                   DEFAULT -> Interface.generalTrhowFromSystem1
                   AST.DepSys ds1 ds2 ds3 ds4 ds5 throwsGen -> throwsGen }) -}
a78ca8eaea4205d45f6d43a0d9fc8445
  generalTrhowFromSystem1 :: AST.ThrowsGen
  {- Strictness: x -}
90476d74da0c5b6c7b4bcf2d7731a635
  get_attributes ::
    [AST.Name] -> Mannager.Env -> GHC.Types.IO Mannager.Env
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar4
                  `cast`
                (<[AST.Name]>_R
                 ->_R <Mannager.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Mannager.Env>_R)) -}
df1f46a83e0e7a99e392eeb175080288
  listCon :: [GHC.Base.String] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
cdc867f9feed362ec47e5dd2c70f6bbd
  listEnv :: Mannager.Env -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
b819c1fe086f884282f6f44d69ff0a9b
  loadCharaterInterface ::
    GHC.Base.String -> GHC.Types.IO [AST.Character]
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdLoadChar2
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
62d7af63549c0d9db35e0da0b29af91a
  make_action :: AST.System -> [AST.Character] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdMakeAct2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b2b8006d20cb657f9249de5d7ccb41e8
  menu ::
    AST.Game
    -> [(GHC.Base.String,
         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
    -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.menu1
                  `cast`
                (<AST.Game>_R
                 ->_R <[(GHC.Base.String,
                         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fce8b5c6158db8ad2dc2da6aaeef55c3
  menu1 ::
    AST.Game
    -> [(GHC.Base.String,
         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
ac9d850acfd72db0be38ce2f96396b20
  menu_list ::
    [(GHC.Base.String, a)]
    -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
cef572a787920afa364594a629f1df2b
  menu_title ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title30
                   Interface.menu_title1) -}
91293b2a6d350e2599df47b6ea26acb8
  menu_title1 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title28
                   Interface.menu_title2) -}
24826eb28b4e7118e4e61ddb72d61cea
  menu_title10 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title11
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String)))) -}
e5c4bfd202bf56c71968555a9a026a4e
  menu_title11 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.cmdExit2,
                  Interface.cmdExit1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
50cd35f9173c43f1a5f23252dd072a96
  menu_title12 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title13,
                  Interface.cmdShowChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
827f75e96f21be540ca3c8acf612ebe3
  menu_title13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "View Character"#) -}
0cad14571bafca7ff3630974a71c96ad
  menu_title14 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title15,
                  Interface.cmdLoadChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
a33d351e637ffc9e6632c5b5ddb88621
  menu_title15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Load Character"#) -}
8746f14809587ccc49008efe4215616e
  menu_title16 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title17,
                  Interface.cmdDelChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
cb4d83094215bbcc9dc4f9de22a60845
  menu_title17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Delete Character"#) -}
d96b345c78d45a4273259899739bbd22
  menu_title18 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title19,
                  Interface.cmdModChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
c7b444f2c09289624dff364e6e8c01cd
  menu_title19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Modify character"#) -}
bce657baf1ce189cb4f49bfba3d9ed0f
  menu_title2 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title26
                   Interface.menu_title3) -}
0ea44f28c068ee74f2721efc5c5665e9
  menu_title20 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title21,
                  Interface.cmdMakeAct1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
bb2eca01616d5afd14ead1ad80ce8434
  menu_title21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Make an action"#) -}
20a24e8edf6af233ee3c8ea1402d76b7
  menu_title22 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title23,
                  Interface.cmdListAct1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
51315f958588876aec7fd420a1b458fb
  menu_title23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "List Action"#) -}
1f133ec1bac4af6556f746b5e154b48e
  menu_title24 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title25,
                  Interface.cmdSaveChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
b5a06c464c06d31f2e7c621c41fde84e
  menu_title25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Save Character"#) -}
a5f5bd2a91a36feeabc19e034628361f
  menu_title26 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title27,
                  Interface.cmdListChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
534d50e389b7f04177ce96af241f5f51
  menu_title27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "List Character"#) -}
ce1585068f1a2edd4bd5953eb1c1fe9b
  menu_title28 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title29,
                  Interface.cmdRollAtr1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
dd0eaaa98bf8b5f956a5d1ec7312fd13
  menu_title29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Roll attributes/skills"#) -}
d2823bc65b1099176cf5f315efe901d0
  menu_title3 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title24
                   Interface.menu_title4) -}
8969604fbf27a526bccb95adbe88c8ec
  menu_title30 ::
    ([GHC.Types.Char],
     AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
  {- Strictness: m,
     Unfolding: ((Interface.menu_title31,
                  Interface.cmdNewChar1
                    `cast`
                  (<AST.Game>_R
                   ->_R Sym (GHC.Types.N:IO[0] <(AST.Game, GHC.Base.String)>_R)))) -}
f790fd1a75f13679f4033e1c73ed7d9d
  menu_title31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Create new Character"#) -}
0a16e55f76f57b7ee5a35b488119cc82
  menu_title4 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title22
                   Interface.menu_title5) -}
e11ba163d374d2d5d14c53266a1b9ae4
  menu_title5 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title20
                   Interface.menu_title6) -}
d208e70099739e9b8cf920698b54596f
  menu_title6 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title18
                   Interface.menu_title7) -}
f674737c9b3bb55660daabe0565c54b0
  menu_title7 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title16
                   Interface.menu_title8) -}
5c1be52ebf2e645e1a654fb8929d089e
  menu_title8 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title14
                   Interface.menu_title9) -}
78ff41ca193a08a8c02e75dacb8bdd5c
  menu_title9 ::
    [(GHC.Base.String,
      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      AST.Game -> GHC.Types.IO (AST.Game, GHC.Base.String))
                   Interface.menu_title12
                   Interface.menu_title10) -}
954a276b724da795932618b2e839090a
  modifyCharacter ::
    AST.System -> [AST.Character] -> GHC.Types.IO [AST.Character]
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdModChar2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Character]>_R)) -}
8f590ae0590e687ebefc6438e3785aa0
  name_skill :: AST.Skills -> AST.Name
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: AST.Skills) ->
                 case ds of wild { AST.Skill name ds1 -> name }) -}
8ecdce119e29f82449bf92f8925e8c98
  printRoll ::
    ([GHC.Integer.Type.Integer], [GHC.Integer.Type.Integer],
     GHC.Integer.Type.Integer)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([GHC.Integer.Type.Integer], [GHC.Integer.Type.Integer],
                          GHC.Integer.Type.Integer)) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 Interface.$wprintRoll ww1 ww2 ww3 }) -}
03c2f517650e387c8d99960a1d88dca5
  printRoll1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
1024ee1a28676045f62192734d86b6b8
  printSkillClass ::
    [AST.Skills] -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
b2b0099233f99d7ea3732d7b603ff56e
  putAndWait :: GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdDelChar4
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
4c9895b3416dfee10f431f289a0957ee
  roll_skilatr :: AST.System -> [AST.Character] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdRollAtr2
                  `cast`
                (<AST.System>_R
                 ->_R <[AST.Character]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9c87254162a9133f4f4716b247d01dd9
  saveCharacther :: [AST.Character] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdSaveChar2
                  `cast`
                (<[AST.Character]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
70ad7e8c10d5a255feb7f54dbea1ec36
  showAtributes :: AST.Character -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.showAtributes1
                  `cast`
                (<AST.Character>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fd2feb8eb52771d69ff2bea84a3fbce8
  showAtributes1 ::
    AST.Character
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: AST.Character)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { AST.PC ww1 ww2 ww3 ->
                 Interface.$wshowAtributes ww1 ww2 ww3 w1 }) -}
50ab871402b8985bb784bee87a5f74c4
  showCharacter :: [AST.Character] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdShowChar3
                  `cast`
                (<[AST.Character]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
602ca16ffc69b3ae420f4e8b25b3734d
  skilatr_list ::
    Mannager.Env -> GHC.Integer.Type.Integer -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
77e884f6cf2b12d43fafa07be6bac647
  skillTitle :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "------------------------------------------------\n\
                   \Choose the skill class - enter 0 when you finish\n\
                   \------------------------------------------------\n"#) -}
7571afed5679137ad377a37b5d058428
  skill_picker ::
    [AST.Skills] -> [AST.Skills] -> GHC.Types.IO [AST.Skills]
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.cmdNewChar3
                  `cast`
                (<[AST.Skills]>_R
                 ->_R <[AST.Skills]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[AST.Skills]>_R)) -}
6ac758599ca59e2ca0a205493fde3fdf
  start :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Interface.start1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
59b8675b42bf8d2aa12a3242c82a0a9b
  start1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Interface.fileStarter1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
96d9e4e4ce61ebe114a2537a3c208348
  welcome :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "|------------------------------------------|\n\
                   \|       Welcome to GoblinBurner v1.8       |\n\
                   \|------------------------------------------|\n\
                   \\n"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

